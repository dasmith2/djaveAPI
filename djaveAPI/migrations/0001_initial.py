# Generated by Django 3.0.5 on 2020-06-16 20:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djaveAllowed.credentials
import djaveAllowed.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('obj_id', models.IntegerField(editable=False, help_text='What object id is this webhook talking about?')),
                ('payload', models.TextField(help_text='The actual json that will be POST-ed to a server')),
                ('webhook_url', models.CharField(help_text='Where should we post payload to?', max_length=400)),
                ('last_send_attempt_at', models.DateTimeField(blank=True, help_text='When, if ever, did this webhook last attempt to post?', null=True)),
                ('attempts', models.PositiveIntegerField(default=0, help_text='How many times did this Webhook attempt to post?')),
                ('success_at', models.DateTimeField(blank=True, help_text='When, if ever, did this Webhook successfully go out?', null=True)),
                ('obj_type', models.ForeignKey(editable=False, help_text='What type of object is this webhook talking about?', on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Because passwords are encrypted in the database, we need a username to look up the key.', max_length=100, unique=True)),
                ('hashed_password', models.CharField(help_text='The password is salted and hashed. Then, if a hacker gains readonly access to the database, they will at least be prevented from immediately executing requests on behalf of teams.', max_length=100)),
                ('webhook_url', models.CharField(blank=True, default='', help_text='When any important object changes, what URL should we POST the new object data to?', max_length=400)),
                ('child_class', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, djaveAllowed.credentials.CredentialsInterface),
        ),
        migrations.CreateModel(
            name='UserAPIKey',
            fields=[
                ('apikey_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djaveAPI.APIKey')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('djaveAPI.apikey', djaveAllowed.credentials.HasUserCredentialsInterface, models.Model, djaveAllowed.models.AllowedInterface),
        ),
    ]
